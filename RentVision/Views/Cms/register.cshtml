@model RegisterPage
@inject IApi Api

@{
    ViewBag.Title = Model.Title;

    var rqf = Context.Features.Get<IRequestCultureFeature>();
    var localize = Localizer.WithCulture(rqf.RequestCulture.Culture);

    // Check if there's an error set in tempData and display it
    string statusMessage = TempData["StatusMessage"] != null ? TempData["StatusMessage"].ToString() : "";
    string[] errors = (TempData["Errors"] != null) ? (string[])TempData["Errors"] : null;
}

@section head {
    <link rel="stylesheet/less" type="text/css" href="~/css/portal.min.css">
}

<div class="d-flex justify-content-center form-register">
    <div class="form">
        <div class="logo-box">
            <div class="logo logo-dark"></div>
        </div>

        @if (!string.IsNullOrWhiteSpace(statusMessage))
        {
            <span class="statusMessage">@statusMessage</span>
        }

        @if (errors != null && errors.Length > 0)
        {
            foreach (var error in errors)
            {
                <span class="statusMessage">@error</span>
            }
        }

        @if ( !Html.ViewData.ModelState.IsValid )
        {
            <span class="statusMessage">@Html.ValidationSummary()</span>
        }

        <form method="post" action="@Model.Fields.ButtonLink.Value">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="Id" />

            <div class="notification info">
                <i class="fas fa-info"></i>
                <span>@string.Format(Localizer["selectedPlan"].Value, Model.SelectedUserPlan.Name)</span>
            </div>

            <div class="form-group mb-3">
                <label for="email">@Model.Fields.Email.Value</label>
                <input asp-for="Email" id="email" name="email" type="text" class="form-control" placeholder="john@doe.com" aria-label="@Model.Fields.Email.Value" aria-describedby="emailHelp">
                <small id="emailHelp" class="form-text text-muted">@Model.Fields.EmailLabel.Value</small>
            </div>

            <div class="form-group mb-3">
                <label for="subdomain">@Model.Fields.Subdomain.Value</label>

                <div class="input-group">
                    <input asp-for="Subdomain" id="subdomain" name="subdomain" type="text" class="form-control" placeholder="johnsrental" aria-label="@Model.Fields.Subdomain.Value" aria-describedby="subdomainHelp">
                    <div class="input-group-append">
                        <span class="input-group-text" id="basic-addon2">.rentvision.eu</span>
                    </div>
                </div>

                <small id="subdomainHelp" class="form-text text-muted">@Model.Fields.SubdomainLabel.Value</small>
            </div>

            <div class="form-group mb-3">
                <label for="businessUnitName">@Model.Fields.BusinessUnitName.Value</label>
                <input asp-for="BusinessUnitName" id="businessUnitName" name="businessUnitName" type="text" class="form-control" placeholder="John's Rental B.V." aria-label="@Model.Fields.BusinessUnitName.Value" aria-describedby="basic-addon2">
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="password">@Model.Fields.Password.Value</label>
                    <input asp-for="Password" id="password" type="password" class="form-control" name="password" placeholder="@Model.Fields.Password.Value...">
                </div>

                <div class="form-group col-md-6">
                    <label for="confirmPassword">@Model.Fields.ConfirmPassword.Value</label>
                    <input asp-for="ConfirmPassword" id="confirmPassword" type="password" class="form-control" name="confirmPassword" placeholder="@Model.Fields.ConfirmPassword.Value..." />
                </div>
            </div>

            <div class="passwordRequirements">
                <span><strong>@Model.Fields.PasswordRequirementText</strong></span>

                <ul class="requirements">
                    <li class="minLengthRequirement"><i class="fas fa-times"></i>@Model.Fields.minLengthRequirement</li>
                    <li class="numberRequirement"><i class="fas fa-times"></i>@Model.Fields.numberRequirement</li>
                    <li class="upperCaseRequirement"><i class="fas fa-times"></i>@Model.Fields.upperCaseRequirement</li>
                    <li class="specialCharRequirement"><i class="fas fa-times"></i>@Model.Fields.specialCharRequirement</li>
                    <li class="passwordMatchRequirement"><i class="fas fa-times"></i>@Model.Fields.passwordMatchRequirement</li>
                </ul>
            </div>

            <div class="box">
                <input asp-for="Tos" id="tos" type="checkbox" name="tos" value="true">
                <label for="tos">@Html.Raw(Model.Fields.Tos.Value)</label>
            </div>

            @Html.Recaptcha(RecaptchaSettings.Value)

            <div class="requirements"></div>

            <button class="register" disabled>@Model.Fields.ButtonText.Value</button>
            <a href="/"><i class="fas fa-arrow-left"></i>@Model.Fields.ReturnButtonText.Value</a>
        </form>
    </div>
</div>

@section script {
    <script type="text/javascript" src="~/assets/js/register.js"></script>
    <script type="text/javascript" src="~/assets/js/formValidator.js"></script>
}